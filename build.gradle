import java.text.SimpleDateFormat

plugins {
    id 'com.gradleup.shadow' version '8.3.6'
    id 'java'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '2.2.20-Beta1'
}

group = "org.alpacaindustries.iremiaminigamecore"

static def getTime() {
    SimpleDateFormat sdf = new SimpleDateFormat("yyMMdd-HHmm")
    sdf.setTimeZone(TimeZone.getTimeZone("UTC"))
    return sdf.format(new Date()).toString()
}

// Set version to version property if supplied (for GitHub releases or manual builds)
String shortVersion = null
if (hasProperty('ver')) {
    if (ver.charAt(0) == "v") {
        shortVersion = ver.substring(1)
    } else {
        shortVersion = ver
    }
} else if (System.getenv("GITHUB_REF_TYPE") == "tag") {
    // Extract version from GitHub release tag
    String githubRef = System.getenv("GITHUB_REF_NAME")
    if (githubRef != null) {
        if (githubRef.startsWith("v")) {
            shortVersion = githubRef.substring(1)
        } else {
            shortVersion = githubRef
        }
    }
}

// If the tag includes "-RC-" or no tag is supplied, append "-SNAPSHOT"
int rcIdx
if (shortVersion == null || shortVersion == "") {
    version = getTime() + "-SNAPSHOT"
} else if ((rcIdx = shortVersion.indexOf("-RC-")) != -1) {
    version = shortVersion.substring(0, rcIdx) + "-SNAPSHOT"
} else {
    version = shortVersion
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}


kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

compileJava.dependsOn compileKotlin

repositories {
    maven {
        name = 'papermc'
        url = 'https://repo.papermc.io/repository/maven-public/'
        content {
            includeModule("io.papermc.paper", "paper-api")
            includeModule("io.papermc", "paperlib")
            includeModule("net.md-5", "bungeecord-chat")
            includeGroup("io.papermc.adventure")
        }
    }

    maven {
        name = 'minecraft'
        url = 'https://libraries.minecraft.net'
        content {
            includeModule("com.mojang", "brigadier")
        }
    }

    mavenCentral()
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.21.5-R0.1-SNAPSHOT'
    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.9.3'
    implementation 'io.papermc:paperlib:1.0.8'
    shadow 'org.jetbrains.kotlin:kotlin-stdlib:2.2.20-Beta1'
    shadow 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2'
}

processResources {
    filesMatching("**/plugin.yml") {
        expand ( NAME: rootProject.name, VERSION: version, PACKAGE: rootProject.group.toString() )
    }
}



shadowJar {
    archiveClassifier.set('')
    relocate 'io.papermc.lib', 'shadow.io.papermc.paperlib'
    minimize()
}

// Disable jar and replace with shadowJar
jar.enabled = false
assemble.dependsOn(shadowJar)

tasks.register('printProjectName') {
    doLast {
        println rootProject.name
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/Alpaca-Industries/IremiaMinigameCore"
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            artifact shadowJar // publish the shadowJar instead
            groupId = project.group.toString()
            artifactId = rootProject.name
            version = project.version
        }
    }
}
